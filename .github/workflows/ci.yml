name: Release Manager

on:
  push:
    tags: ['*']  # Триггер на любые теги

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Важно: даем разрешение на запись
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Полная история для работы с тегами

    - name: Get version info
      id: version
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/}
        echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT
        # Если тег начинается с 'v' - убираем его
        CLEAN_VERSION=${TAG_VERSION#v}
        echo "clean_version=${CLEAN_VERSION}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Автоматически доступен
      with:
        tag_name: ${{ steps.version.outputs.tag_version }}  # Оригинальное имя тега
        release_name: Release ${{ steps.version.outputs.tag_version }}
        body: |
          Version ${{ steps.version.outputs.clean_version }}
          Автоматически созданный релиз
        draft: false
        prerelease: false

  build:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - run: cmake --build build
